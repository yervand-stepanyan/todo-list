{"version":3,"sources":["globals/constants.js","store/context.js","store/use-store.js","components/Filters/Filters.style.js","components/Filters/Filters.js","components/Input/Input.style.js","components/Input/Input.js","helpers/removeSpaces.js","components/Title/Title.js","components/TodoItem/TodoItemEdit/TodoItemEdit.style.js","components/TodoItem/TodoItemEdit/TodoItemEdit.js","components/TodoItem/GreenCheckbox/GreenCheckbox.js","components/TodoItem/TodoItemView/TodoItemView.style.js","components/TodoItem/TodoItemView/TodoItemView.js","components/TodoItem/TodoItem.js","components/Todolist/Todolist.style.js","components/Todolist/Todolist.js","pages/Main/Main.style.js","pages/Main/Main.js","theme/theme.js","reportWebVitals.js","index.js"],"names":["FILTER_BUTTON_ITEM","all","label","value","active","completed","BUTTON_LABEL","INPUT","LABEL","multi","single","StoreContext","createContext","useStore","useContext","useStyles","makeStyles","theme","filtersContainer","display","alignItems","flexWrap","justifyContent","marginTop","customSpacing","base","hideFilters","leftItemContainer","order","color","leftItemLabelColor","cursor","width","size","leftItemWidth","leftItemLabelWrapper","marginLeft","xSmall","buttonGroupContainer","margin","clearCompletedContainer","hideClearCompletedWrapper","visibility","Filters","classes","filterButtonItems","Object","values","handleClearAllCompleted","handleFilterSelect","selectedFilter","todolist","leftItemCount","filter","todo","done","length","leftItemLabel","hideClearCompleted","some","className","Typography","variant","map","Button","onClick","inputContainer","textFieldWrapper","textField","button","height","Input","useState","setValue","handleTodoAdd","handleSubmit","TextField","fullWidth","id","onChange","e","target","onKeyDown","key","placeholder","removeSpaces","text","replace","Title","todoItemEditContainer","position","editTextFieldPaddingRight","submitIconWrapper","right","TodoItemEdit","description","handleEdit","handleTodoEdit","useEffect","autoFocus","error","onBlur","preventDefault","IconButton","aria-label","disabled","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","todoItemViewContainer","boxSizing","minHeight","todoItemHeight","paddingLeft","checkedDescription","checkedDescriptionColor","textDecoration","iconsContainer","TodoItemView","handleTodoCheckedChange","handleRemove","FormControlLabel","control","name","TodoItem","item","isEdit","setIsEdit","handleTodoRemove","edit","itemId","todolistContainer","Todolist","todolistToShow","setTodolistToShow","filteredTodolist","mainContainer","flexDirection","backgroundColor","mainBackgroundColor","padding","small","large","contentContainer","card","Main","setSelectedFilter","setTodolist","Card","CardContent","Provider","newTodo","uuid","updatedTodolist","normalizedDescription","createMuiTheme","MAIN_SPACING_VALUE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.569cb1eb.chunk.js","sourcesContent":["export const FILTER_BUTTON_ITEM = {\n  all: {\n    label: 'All',\n    value: 'all',\n  },\n  active: {\n    label: 'Active',\n    value: 'active',\n  },\n  completed: {\n    label: 'Completed',\n    value: 'completed',\n  },\n};\nexport const BUTTON_LABEL = {\n  add: 'Add',\n  clearCompleted: 'Clear completed',\n};\nexport const INPUT = {\n  editInputPlaceholder: 'Description can NOT be empty!',\n  mainInputPlaceholder: 'What needs to be done?',\n};\nexport const LABEL = {\n  leftItem: {\n    multi: 'items left',\n    single: 'item left',\n  },\n};\nexport const TITLE = 'Todo List';\n","import { createContext } from 'react';\n\nconst StoreContext = createContext(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\n\nimport StoreContext from './context';\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  filtersContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: theme.customSpacing.base,\n  },\n  hideFilters: {\n    display: 'none',\n  },\n  leftItemContainer: {\n    display: 'flex',\n    order: 0,\n    color: theme.color.leftItemLabelColor,\n    cursor: 'default',\n    width: theme.size.leftItemWidth,\n  },\n  leftItemLabelWrapper: {\n    marginLeft: theme.customSpacing.xSmall,\n  },\n  buttonGroupContainer: {\n    display: 'flex',\n    order: 2,\n    margin: `${theme.customSpacing.base} auto 0`,\n    '@media only screen and (min-width: 499px)': {\n      order: 1,\n      margin: 0,\n    },\n  },\n  clearCompletedContainer: {\n    order: 1,\n  },\n  hideClearCompletedWrapper: {\n    visibility: 'hidden',\n  },\n}));\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  BUTTON_LABEL,\n  FILTER_BUTTON_ITEM,\n  LABEL,\n} from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Filters.style';\n\nfunction Filters() {\n  const classes = useStyles();\n  const filterButtonItems = Object.values(FILTER_BUTTON_ITEM);\n  const {\n    handleClearAllCompleted,\n    handleFilterSelect,\n    selectedFilter,\n    todolist,\n  } = useStore();\n  const leftItemCount = todolist.filter(todo => !todo.done).length;\n  const leftItemLabel =\n    leftItemCount === 1 ? LABEL.leftItem.single : LABEL.leftItem.multi;\n  const hideClearCompleted = todolist.some(todo => todo.done);\n\n  const handleFilterClick = text => {\n    handleFilterSelect(text);\n  };\n\n  const handleClearCompleted = () => {\n    handleClearAllCompleted();\n  };\n\n  return (\n    <div\n      className={`${\n        todolist.length ? classes.filtersContainer : classes.hideFilters\n      }`}\n    >\n      <div className={classes.leftItemContainer}>\n        <div>\n          <Typography variant=\"body2\">{leftItemCount}</Typography>\n        </div>\n        <div className={classes.leftItemLabelWrapper}>\n          <Typography variant=\"body2\">{leftItemLabel}</Typography>\n        </div>\n      </div>\n      <div className={classes.buttonGroupContainer}>\n        {filterButtonItems.map(({ label, value }) => (\n          <div key={value}>\n            <Button\n              color={value === selectedFilter ? 'secondary' : 'primary'}\n              onClick={() => handleFilterClick(value)}\n              size=\"small\"\n            >\n              {label}\n            </Button>\n          </div>\n        ))}\n      </div>\n      <div\n        className={`${classes.clearCompletedContainer} ${\n          hideClearCompleted ? '' : classes.hideClearCompletedWrapper\n        }`}\n      >\n        <Button\n          color=\"secondary\"\n          onClick={handleClearCompleted}\n          size=\"small\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.clearCompleted}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  inputContainer: {\n    display: 'flex',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& fieldset`]: {\n      'border-top-right-radius': 0,\n      'border-bottom-right-radius': 0,\n    },\n  },\n  button: {\n    'border-top-left-radius': 0,\n    'border-bottom-left-radius': 0,\n    height: '100%',\n  },\n});\n","import { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { BUTTON_LABEL, INPUT } from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Input.style';\n\nfunction Input() {\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n  const { handleTodoAdd } = useStore();\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (value) {\n      handleTodoAdd(value);\n\n      setValue('');\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className={classes.inputContainer}>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          className={classes.textField}\n          fullWidth\n          id=\"outlined-full-width\"\n          onChange={e => handleInputChange(e)}\n          onKeyDown={e => handleSubmitOnEnter(e)}\n          placeholder={INPUT.mainInputPlaceholder}\n          value={value}\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          onClick={handleSubmit}\n          size=\"large\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.add}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n","const removeSpaces = text => {\n  if (typeof text === 'string' && text.length) {\n    const firstReplace = text.replace(/\\s\\s+/g, ' ');\n    const regex = /^\\s*|\\s*$/g;\n\n    return firstReplace.replace(regex, '');\n  }\n  return text;\n};\n\nexport default removeSpaces;\n","import PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title({ text }) {\n  return (\n    <div>\n      <Typography variant=\"h2\">{text}</Typography>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\nexport default Title;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todoItemEditContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& input`]: {\n      'padding-right': theme.customSpacing.editTextFieldPaddingRight,\n    },\n  },\n  submitIconWrapper: {\n    position: 'absolute',\n    right: 0,\n  },\n}));\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nimport { INPUT } from '../../../globals/constants';\nimport { useStyles } from './TodoItemEdit.style';\n\nfunction TodoItemEdit({ description, handleEdit, handleTodoEdit, id }) {\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setValue(description);\n  }, []);\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (value) {\n      const editedDescription = { description: value, id };\n\n      handleTodoEdit(editedDescription);\n\n      handleEdit(false);\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmitOnBlur = event => {\n    event.preventDefault();\n\n    handleSubmit();\n  };\n\n  return (\n    <div className={classes.todoItemEditContainer}>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          autoFocus\n          className={classes.textField}\n          error={!value}\n          fullWidth\n          id=\"outlined-full-width\"\n          onBlur={e => handleSubmitOnBlur(e)}\n          onChange={e => handleInputChange(e)}\n          onKeyDown={e => handleSubmitOnEnter(e, id)}\n          placeholder={INPUT.editInputPlaceholder}\n          value={value}\n          variant=\"outlined\"\n        />\n      </div>\n      <div className={classes.submitIconWrapper}>\n        <IconButton\n          aria-label=\"submit edit\"\n          color=\"primary\"\n          disabled={!value}\n          onClick={handleSubmit}\n        >\n          <CheckIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nTodoItemEdit.propTypes = {\n  description: PropTypes.string.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleTodoEdit: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default TodoItemEdit;\n","import Checkbox from '@material-ui/core/Checkbox';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nexport default GreenCheckbox;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todoItemViewContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    minHeight: theme.size.todoItemHeight,\n    paddingLeft: '12px',\n  },\n  checkedDescription: {\n    color: theme.color.checkedDescriptionColor,\n    textDecoration: 'line-through',\n  },\n  iconsContainer: {\n    display: 'flex',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport GreenCheckbox from '../GreenCheckbox';\nimport { useStyles } from './TodoItemView.style';\n\nfunction TodoItemView({\n  description,\n  done,\n  handleEdit,\n  handleTodoCheckedChange,\n  handleRemove,\n  id,\n}) {\n  const classes = useStyles();\n\n  const handleCheckboxChange = () => {\n    handleTodoCheckedChange(id);\n  };\n  const handleEditClick = () => {\n    handleEdit(true);\n  };\n\n  const handleRemoveClick = () => {\n    handleRemove(id);\n  };\n\n  return (\n    <div className={classes.todoItemViewContainer}>\n      <div>\n        <FormControlLabel\n          control={\n            <GreenCheckbox\n              checked={done}\n              name=\"checkedG\"\n              onChange={handleCheckboxChange}\n            />\n          }\n          label={\n            <Typography\n              className={`${done ? classes.checkedDescription : ''}`}\n              variant=\"body1\"\n            >\n              {description}\n            </Typography>\n          }\n        />\n      </div>\n      <div className={classes.iconsContainer}>\n        <div>\n          <IconButton\n            aria-label=\"edit an item\"\n            color=\"primary\"\n            onClick={handleEditClick}\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n        <div>\n          <IconButton\n            aria-label=\"delete an item\"\n            color=\"secondary\"\n            onClick={handleRemoveClick}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTodoItemView.propTypes = {\n  description: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleTodoCheckedChange: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default TodoItemView;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItemEdit from './TodoItemEdit';\nimport TodoItemView from './TodoItemView';\nimport { useStore } from '../../store/use-store';\n\nfunction TodoItem({ item }) {\n  const { description, done, id } = item;\n  const [isEdit, setIsEdit] = useState(false);\n  const {\n    handleTodoCheckedChange,\n    handleTodoEdit,\n    handleTodoRemove,\n  } = useStore();\n\n  const handleEdit = edit => {\n    setIsEdit(edit);\n  };\n\n  const handleRemove = itemId => {\n    handleTodoRemove(itemId);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <TodoItemEdit\n          description={description}\n          handleEdit={handleEdit}\n          handleTodoEdit={handleTodoEdit}\n          id={id}\n        />\n      ) : (\n        <TodoItemView\n          description={description}\n          done={done}\n          handleEdit={handleEdit}\n          handleRemove={handleRemove}\n          handleTodoCheckedChange={handleTodoCheckedChange}\n          id={id}\n        />\n      )}\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default TodoItem;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todolistContainer: {\n    marginTop: theme.customSpacing.base,\n  },\n}));\n","import { useEffect, useState } from 'react';\n\nimport { FILTER_BUTTON_ITEM } from '../../globals/constants';\nimport TodoItem from '../TodoItem';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Todolist.style';\n\nfunction Todolist() {\n  const classes = useStyles();\n  const { selectedFilter, todolist } = useStore();\n  const [todolistToShow, setTodolistToShow] = useState([]);\n\n  useEffect(() => {\n    if (selectedFilter === FILTER_BUTTON_ITEM.active.value) {\n      const filteredTodolist = todolist.filter(todo => !todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else if (selectedFilter === FILTER_BUTTON_ITEM.completed.value) {\n      const filteredTodolist = todolist.filter(todo => todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else {\n      setTodolistToShow(todolist);\n    }\n  }, [selectedFilter, todolist]);\n\n  return (\n    <div className={classes.todolistContainer}>\n      {todolistToShow.map(item => (\n        <TodoItem item={item} key={item.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default Todolist;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: theme.color.mainBackgroundColor,\n    boxSizing: 'border-box',\n    minHeight: '100vh',\n    padding: `${theme.customSpacing.small} ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n    '@media only screen and (min-width: 600px)': {\n      padding: `${theme.customSpacing.small} ${theme.customSpacing.base} ${theme.customSpacing.large}`,\n    },\n  },\n  contentContainer: {\n    marginTop: theme.customSpacing.base,\n    width: '100%',\n    '@media only screen and (min-width: 600px)': {\n      width: '90%',\n    },\n    '@media only screen and (min-width: 768px)': {\n      width: '80%',\n    },\n    '@media only screen and (min-width: 992px)': {\n      width: '70%',\n    },\n    '@media only screen and (min-width: 1200px)': {\n      width: '60%',\n    },\n  },\n  card: {\n    height: 'inherit',\n  },\n}));\n","import { useState } from 'react';\nimport uuid from 'react-uuid';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { FILTER_BUTTON_ITEM, TITLE } from '../../globals/constants';\nimport Filters from '../../components/Filters';\nimport Input from '../../components/Input';\nimport removeSpaces from '../../helpers/removeSpaces';\nimport StoreContext from '../../store/context';\nimport Title from '../../components/Title';\nimport Todolist from '../../components/Todolist';\nimport { useStyles } from './Main.style';\n\nfunction Main() {\n  const classes = useStyles();\n  const [selectedFilter, setSelectedFilter] = useState(\n    FILTER_BUTTON_ITEM.all.value\n  );\n  const [todolist, setTodolist] = useState([]);\n\n  const handleTodoAdd = description => {\n    const normalizedDescription = removeSpaces(description);\n\n    const newTodo = {\n      description: normalizedDescription,\n      done: false,\n      id: uuid(),\n    };\n\n    setTodolist([...todolist, newTodo]);\n  };\n\n  const handleTodoCheckedChange = id => {\n    const updatedTodolist = todolist.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            done: !todo.done,\n          }\n        : todo\n    );\n\n    setTodolist(updatedTodolist);\n  };\n\n  const handleTodoEdit = ({ description, id }) => {\n    const normalizedDescription = removeSpaces(description);\n\n    const updatedTodolist = todolist.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            description: normalizedDescription,\n          }\n        : todo\n    );\n\n    setTodolist(updatedTodolist);\n  };\n\n  const handleTodoRemove = id => {\n    const filteredTodolist = todolist.filter(todo => todo.id !== id);\n\n    setTodolist(filteredTodolist);\n  };\n\n  const handleFilterSelect = text => {\n    setSelectedFilter(text);\n  };\n\n  const handleClearAllCompleted = () => {\n    const filteredTodolist = todolist.filter(todo => !todo.done);\n\n    setTodolist(filteredTodolist);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <div>\n        <Title text={TITLE} />\n      </div>\n      <div className={classes.contentContainer}>\n        <Card className={classes.card}>\n          <CardContent>\n            <StoreContext.Provider\n              value={{\n                handleClearAllCompleted,\n                handleFilterSelect,\n                handleTodoAdd,\n                handleTodoCheckedChange,\n                handleTodoEdit,\n                handleTodoRemove,\n                selectedFilter,\n                todolist,\n              }}\n            >\n              <Input />\n              <Todolist />\n              <Filters />\n            </StoreContext.Provider>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst EDIT_PADDING_VALUE = 62;\nconst LEFT_ITEM_WIDTH = 90;\nconst MAIN_SPACING_VALUE = 16;\nconst TODO_ITEM_HEIGHT = 56;\n\nconst checkedDescriptionColor = '#b2b2b2';\nconst leftItemLabelColor = '#8c8c8c';\nconst mainBackgroundColor = '#F5F7F9';\n\nexport const theme = createMuiTheme({\n  color: {\n    checkedDescriptionColor,\n    leftItemLabelColor,\n    mainBackgroundColor,\n  },\n  customSpacing: {\n    xSmall: `${MAIN_SPACING_VALUE / 4}px`,\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    editTextFieldPaddingRight: `${EDIT_PADDING_VALUE}px`,\n  },\n  size: {\n    leftItemWidth: `${LEFT_ITEM_WIDTH}px`,\n    todoItemHeight: `${TODO_ITEM_HEIGHT}px`,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Main from './pages/Main';\nimport { theme } from './theme/theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}