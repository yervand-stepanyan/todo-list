{"version":3,"sources":["globals/constants.js","store/context.js","store/use-store.js","components/Filters/Filters.style.js","components/Filters/Filters.js","components/Input/Input.style.js","components/Input/Input.js","helpers/removeSpaces.js","components/Title/Title.js","components/GreenCheckbox/GreenCheckbox.js","components/TodoItem/TodoItem.style.js","components/TodoItem/TodoItem.js","components/Todolist/Todolist.style.js","components/Todolist/Todolist.js","pages/Main/Main.style.js","pages/Main/Main.js","theme/theme.js","reportWebVitals.js","index.js"],"names":["BUTTON_LABEL","add","filters","clearCompleted","INPUT","LABEL","multi","single","StoreContext","createContext","useStore","useContext","useStyles","makeStyles","theme","filtersContainer","display","alignItems","flexWrap","justifyContent","marginTop","customSpacing","base","hideFilters","leftItemContainer","order","color","leftItemLabelColor","cursor","width","size","leftItemWidth","leftItemLabelWrapper","marginLeft","xSmall","buttonGroupContainer","margin","clearCompletedContainer","hideClearCompletedWrapper","visibility","Filters","classes","handleClearAllCompleted","handleFilterSelect","selectedFilter","todolist","leftItemCount","filter","todo","done","length","leftItemLabel","hideClearCompleted","some","className","Typography","variant","map","button","Button","onClick","inputContainer","textFieldWrapper","textField","height","Input","useState","value","setValue","handleTodoAdd","handleSubmit","TextField","fullWidth","id","onChange","e","target","onKeyDown","key","placeholder","removeSpaces","text","replace","Title","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","editItemWrapper","position","editTextFieldPaddingRight","submitIconWrapper","right","itemWrapper","boxSizing","minHeight","todoItemHeight","paddingLeft","checkedDescription","checkedDescriptionColor","textDecoration","iconsContainer","TodoItem","handleTodoCheckedChange","item","description","isEdit","setIsEdit","handleTodoEdit","handleTodoRemove","useEffect","itemId","autoFocus","error","onBlur","preventDefault","IconButton","aria-label","disabled","FormControlLabel","control","name","label","todolistContainer","Todolist","todolistToShow","setTodolistToShow","filteredTodolist","mainContainer","flexDirection","backgroundColor","mainBackgroundColor","padding","small","large","contentContainer","card","Main","setSelectedFilter","setTodolist","Card","CardContent","Provider","newTodo","uuid","updatedTodolist","normalizedDescription","createMuiTheme","MAIN_SPACING_VALUE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.bac92496.chunk.js","sourcesContent":["export const BUTTON_LABEL = {\n  add: 'Add',\n  filters: ['All', 'Active', 'Completed'],\n  clearCompleted: 'Clear completed',\n};\nexport const INPUT = {\n  editInputPlaceholder: 'Description can NOT be empty!',\n  mainInputPlaceholder: 'What needs to be done?',\n};\nexport const LABEL = {\n  leftItem: {\n    multi: 'items left',\n    single: 'item left',\n  },\n};\nexport const TITLE = 'Todo List';\n","import { createContext } from 'react';\n\nconst StoreContext = createContext(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\n\nimport StoreContext from './context';\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  filtersContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: theme.customSpacing.base,\n  },\n  hideFilters: {\n    display: 'none',\n  },\n  leftItemContainer: {\n    display: 'flex',\n    order: 0,\n    color: theme.color.leftItemLabelColor,\n    cursor: 'default',\n    width: theme.size.leftItemWidth,\n  },\n  leftItemLabelWrapper: {\n    marginLeft: theme.customSpacing.xSmall,\n  },\n  buttonGroupContainer: {\n    display: 'flex',\n    order: 2,\n    margin: `${theme.customSpacing.base} auto 0`,\n    '@media only screen and (min-width: 499px)': {\n      order: 1,\n      margin: 0,\n    },\n  },\n  clearCompletedContainer: {\n    order: 1,\n  },\n  hideClearCompletedWrapper: {\n    visibility: 'hidden',\n  },\n}));\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { BUTTON_LABEL, LABEL } from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Filters.style';\n\nfunction Filters() {\n  const classes = useStyles();\n  const {\n    handleClearAllCompleted,\n    handleFilterSelect,\n    selectedFilter,\n    todolist,\n  } = useStore();\n  const leftItemCount = todolist.filter(todo => !todo.done).length;\n  const leftItemLabel =\n    leftItemCount === 1 ? LABEL.leftItem.single : LABEL.leftItem.multi;\n  const hideClearCompleted = todolist.some(todo => todo.done);\n\n  const handleFilterClick = text => {\n    handleFilterSelect(text);\n  };\n\n  const handleClearCompleted = () => {\n    handleClearAllCompleted();\n  };\n\n  return (\n    <div\n      className={`${\n        todolist.length ? classes.filtersContainer : classes.hideFilters\n      }`}\n    >\n      <div className={classes.leftItemContainer}>\n        <div>\n          <Typography variant=\"body2\">{leftItemCount}</Typography>\n        </div>\n        <div className={classes.leftItemLabelWrapper}>\n          <Typography variant=\"body2\">{leftItemLabel}</Typography>\n        </div>\n      </div>\n      <div className={classes.buttonGroupContainer}>\n        {BUTTON_LABEL.filters.map(button => (\n          <div key={button}>\n            <Button\n              color={button === selectedFilter ? 'secondary' : 'primary'}\n              onClick={() => handleFilterClick(button)}\n              size=\"small\"\n            >\n              {button}\n            </Button>\n          </div>\n        ))}\n      </div>\n      <div\n        className={`${classes.clearCompletedContainer} ${\n          hideClearCompleted ? '' : classes.hideClearCompletedWrapper\n        }`}\n      >\n        <Button\n          color=\"secondary\"\n          onClick={handleClearCompleted}\n          size=\"small\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.clearCompleted}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  inputContainer: {\n    display: 'flex',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& fieldset`]: {\n      'border-top-right-radius': 0,\n      'border-bottom-right-radius': 0,\n    },\n  },\n  button: {\n    'border-top-left-radius': 0,\n    'border-bottom-left-radius': 0,\n    height: '100%',\n  },\n});\n","import { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { BUTTON_LABEL, INPUT } from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Input.style';\n\nfunction Input() {\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n  const { handleTodoAdd } = useStore();\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (value) {\n      handleTodoAdd(value);\n\n      setValue('');\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className={classes.inputContainer}>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          className={classes.textField}\n          fullWidth\n          id=\"outlined-full-width\"\n          onChange={e => handleInputChange(e)}\n          onKeyDown={e => handleSubmitOnEnter(e)}\n          placeholder={INPUT.mainInputPlaceholder}\n          value={value}\n          variant=\"outlined\"\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          onClick={handleSubmit}\n          size=\"large\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.add}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n","const removeSpaces = text => {\n  if (typeof text === 'string' && text.length) {\n    const firstReplace = text.replace(/\\s\\s+/g, ' ');\n    const regex = /^\\s*|\\s*$/g;\n\n    return firstReplace.replace(regex, '');\n  }\n  return text;\n};\n\nexport default removeSpaces;\n","import PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title({ text }) {\n  return (\n    <div>\n      <Typography variant=\"h2\">{text}</Typography>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\nexport default Title;\n","import Checkbox from '@material-ui/core/Checkbox';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nexport default GreenCheckbox;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  editItemWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& input`]: {\n      'padding-right': theme.customSpacing.editTextFieldPaddingRight,\n    },\n  },\n  submitIconWrapper: {\n    position: 'absolute',\n    right: 0,\n  },\n  itemWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    minHeight: theme.size.todoItemHeight,\n    paddingLeft: '12px',\n  },\n  checkedDescription: {\n    color: theme.color.checkedDescriptionColor,\n    textDecoration: 'line-through',\n  },\n  iconsContainer: {\n    display: 'flex',\n  },\n}));\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport GreenCheckbox from '../GreenCheckbox';\nimport { INPUT } from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './TodoItem.style';\n\nfunction TodoItem({ handleTodoCheckedChange, item }) {\n  const classes = useStyles();\n  const { description, done, id } = item;\n  const [isEdit, setIsEdit] = useState(false);\n  const [value, setValue] = useState('');\n  const { handleTodoEdit, handleTodoRemove } = useStore();\n\n  useEffect(() => {\n    setValue(description);\n  }, [isEdit]);\n\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = itemId => {\n    if (value) {\n      handleTodoEdit({ description: value, id: itemId });\n\n      setIsEdit(false);\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit(id);\n    }\n  };\n\n  const handleSubmitOnBlur = event => {\n    event.preventDefault();\n\n    handleSubmit(id);\n  };\n\n  const handleRemove = itemId => {\n    handleTodoRemove(itemId);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <div className={classes.editItemWrapper}>\n          <div className={classes.textFieldWrapper}>\n            <TextField\n              autoFocus\n              className={classes.textField}\n              error={!value}\n              fullWidth\n              id=\"outlined-full-width\"\n              onBlur={e => handleSubmitOnBlur(e)}\n              onChange={e => handleInputChange(e)}\n              onKeyDown={e => handleSubmitOnEnter(e, id)}\n              placeholder={INPUT.editInputPlaceholder}\n              value={value}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.submitIconWrapper}>\n            <IconButton\n              aria-label=\"submit edit\"\n              color=\"primary\"\n              disabled={!value}\n              onClick={() => handleSubmit(id)}\n            >\n              <CheckIcon />\n            </IconButton>\n          </div>\n        </div>\n      ) : (\n        <div className={classes.itemWrapper}>\n          <div>\n            <FormControlLabel\n              control={\n                <GreenCheckbox\n                  checked={done}\n                  name=\"checkedG\"\n                  onChange={() => handleTodoCheckedChange(id)}\n                />\n              }\n              label={\n                <Typography\n                  className={`${done ? classes.checkedDescription : null}`}\n                  variant=\"body1\"\n                >\n                  {description}\n                </Typography>\n              }\n            />\n          </div>\n          <div className={classes.iconsContainer}>\n            <div>\n              <IconButton\n                aria-label=\"edit an item\"\n                color=\"primary\"\n                onClick={handleEdit}\n              >\n                <EditIcon />\n              </IconButton>\n            </div>\n            <div>\n              <IconButton\n                aria-label=\"delete an item\"\n                color=\"secondary\"\n                onClick={() => handleRemove(id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  handleTodoCheckedChange: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n};\n\nexport default TodoItem;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todolistContainer: {\n    marginTop: theme.customSpacing.base,\n  },\n}));\n","import { useEffect, useState } from 'react';\n\nimport { BUTTON_LABEL } from '../../globals/constants';\nimport TodoItem from '../TodoItem';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Todolist.style';\n\nfunction Todolist() {\n  const classes = useStyles();\n  const { filters } = BUTTON_LABEL;\n  const { handleTodoCheckedChange, selectedFilter, todolist } = useStore();\n  const [todolistToShow, setTodolistToShow] = useState([]);\n\n  useEffect(() => {\n    if (selectedFilter === filters[1]) {\n      const filteredTodolist = todolist.filter(todo => !todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else if (selectedFilter === filters[2]) {\n      const filteredTodolist = todolist.filter(todo => todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else {\n      setTodolistToShow(todolist);\n    }\n  }, [selectedFilter, todolist]);\n\n  return (\n    <div className={classes.todolistContainer}>\n      {todolistToShow.map(item => (\n        <TodoItem\n          handleTodoCheckedChange={handleTodoCheckedChange}\n          item={item}\n          key={item.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Todolist;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: theme.color.mainBackgroundColor,\n    boxSizing: 'border-box',\n    minHeight: '100vh',\n    padding: `${theme.customSpacing.small} ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n    '@media only screen and (min-width: 600px)': {\n      padding: `${theme.customSpacing.small} ${theme.customSpacing.base} ${theme.customSpacing.large}`,\n    },\n  },\n  contentContainer: {\n    marginTop: theme.customSpacing.base,\n    width: '100%',\n    '@media only screen and (min-width: 600px)': {\n      width: '90%',\n    },\n    '@media only screen and (min-width: 768px)': {\n      width: '80%',\n    },\n    '@media only screen and (min-width: 992px)': {\n      width: '70%',\n    },\n    '@media only screen and (min-width: 1200px)': {\n      width: '60%',\n    },\n  },\n  card: {\n    height: 'inherit',\n  },\n}));\n","import { useState } from 'react';\nimport uuid from 'react-uuid';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { BUTTON_LABEL, TITLE } from '../../globals/constants';\nimport Filters from '../../components/Filters';\nimport Input from '../../components/Input';\nimport removeSpaces from '../../helpers/removeSpaces';\nimport StoreContext from '../../store/context';\nimport Title from '../../components/Title';\nimport Todolist from '../../components/Todolist';\nimport { useStyles } from './Main.style';\n\nfunction Main() {\n  const classes = useStyles();\n  const [selectedFilter, setSelectedFilter] = useState(BUTTON_LABEL.filters[0]);\n  const [todolist, setTodolist] = useState([]);\n\n  const handleTodoAdd = description => {\n    const normalizedDescription = removeSpaces(description);\n\n    const newTodo = {\n      description: normalizedDescription,\n      done: false,\n      id: uuid(),\n    };\n\n    setTodolist([...todolist, newTodo]);\n  };\n\n  const handleTodoCheckedChange = id => {\n    const updatedTodolist = todolist.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            done: !todo.done,\n          }\n        : todo\n    );\n\n    setTodolist(updatedTodolist);\n  };\n\n  const handleTodoEdit = ({ description, id }) => {\n    const normalizedDescription = removeSpaces(description);\n\n    const updatedTodolist = todolist.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            description: normalizedDescription,\n          }\n        : todo\n    );\n\n    setTodolist(updatedTodolist);\n  };\n\n  const handleTodoRemove = id => {\n    const filteredTodolist = todolist.filter(todo => todo.id !== id);\n\n    setTodolist(filteredTodolist);\n  };\n\n  const handleFilterSelect = text => {\n    setSelectedFilter(text);\n  };\n\n  const handleClearAllCompleted = () => {\n    const filteredTodolist = todolist.filter(todo => !todo.done);\n\n    setTodolist(filteredTodolist);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <div>\n        <Title text={TITLE} />\n      </div>\n      <div className={classes.contentContainer}>\n        <Card className={classes.card}>\n          <CardContent>\n            <StoreContext.Provider\n              value={{\n                handleClearAllCompleted,\n                handleFilterSelect,\n                handleTodoAdd,\n                handleTodoCheckedChange,\n                handleTodoEdit,\n                handleTodoRemove,\n                selectedFilter,\n                todolist,\n              }}\n            >\n              <Input />\n              <Todolist />\n              <Filters />\n            </StoreContext.Provider>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst EDIT_PADDING_VALUE = 62;\nconst LEFT_ITEM_WIDTH = 90;\nconst MAIN_SPACING_VALUE = 16;\nconst TODO_ITEM_HEIGHT = 56;\n\nconst checkedDescriptionColor = '#b2b2b2';\nconst leftItemLabelColor = '#8c8c8c';\nconst mainBackgroundColor = '#F5F7F9';\n\nexport const theme = createMuiTheme({\n  color: {\n    checkedDescriptionColor,\n    leftItemLabelColor,\n    mainBackgroundColor,\n  },\n  customSpacing: {\n    xSmall: `${MAIN_SPACING_VALUE / 4}px`,\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    editTextFieldPaddingRight: `${EDIT_PADDING_VALUE}px`,\n  },\n  size: {\n    leftItemWidth: `${LEFT_ITEM_WIDTH}px`,\n    todoItemHeight: `${TODO_ITEM_HEIGHT}px`,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Main from './pages/Main';\nimport { theme } from './theme/theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}