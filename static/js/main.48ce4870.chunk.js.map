{"version":3,"sources":["fetchAPI/fetchAPI.js","globals/constants.js","store/context.js","store/use-store.js","components/Filters/Filters.style.js","components/Filters/Filters.js","components/Loader/Loader.style.js","components/Loader/Loader.js","components/Input/Input.style.js","components/Input/Input.js","helpers/removeSpaces.js","components/Title/Title.js","components/TodoItem/TodoItemEdit/TodoItemEdit.style.js","components/TodoItem/TodoItemEdit/TodoItemEdit.js","components/TodoItem/GreenCheckbox/GreenCheckbox.js","components/TodoItem/TodoItemView/TodoItemView.style.js","components/TodoItem/TodoItemView/TodoItemView.js","components/TodoItem/TodoItem.js","components/Todolist/Todolist.style.js","components/Todolist/Todolist.js","pages/Main/Main.style.js","pages/Main/Main.js","theme/theme.js","reportWebVitals.js","index.js"],"names":["request","a","method","body","id","URL","process","fetchOption","JSON","stringify","headers","fetch","response","json","API","removeTodo","getTodos","addTodo","updateTodo","FILTER_BUTTON_ITEM","all","label","value","active","completed","BUTTON_LABEL","INPUT","LABEL","multi","single","LOADER","size","thickness","type","StoreContext","createContext","useStore","useContext","useStyles","makeStyles","theme","filtersContainer","display","alignItems","flexWrap","justifyContent","marginTop","customSpacing","base","hideFilters","leftItemContainer","order","color","leftItemLabelColor","cursor","width","leftItemWidth","leftItemLabelWrapper","marginLeft","xSmall","buttonGroupContainer","margin","clearCompletedContainer","hideClearCompletedWrapper","visibility","Filters","classes","filterButtonItems","Object","values","handleClearAllCompleted","handleFilterSelect","selectedFilter","todolist","leftItemCount","filter","todo","done","length","leftItemLabel","hideClearCompleted","some","className","Typography","variant","map","Button","onClick","buttonProgress","left","position","top","fabProgress","zIndex","pageLoaderContainer","larger","textAlign","Loader","loaderType","CircularProgress","loader","inputContainer","textFieldWrapper","textField","buttonWrapper","button","height","Input","useState","setValue","handleTodoAdd","isAddButtonLoading","handleSubmit","TextField","fullWidth","onChange","e","target","onKeyDown","key","placeholder","disabled","removeSpaces","text","replace","Title","todoItemEditContainer","editTextFieldPaddingRight","submitIconWrapper","right","TodoItemEdit","description","handleEdit","handleTodoEdit","useEffect","autoFocus","error","onBlur","preventDefault","IconButton","aria-label","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","todoItemViewContainer","boxSizing","minHeight","todoItemHeight","paddingLeft","checkedDescription","checkedDescriptionColor","textDecoration","iconsContainer","removeIconWrapper","TodoItemView","handleTodoCheckedChange","handleRemove","iconToLoad","isRemoveIconLoading","FormControlLabel","control","name","TodoItem","item","isEdit","setIsEdit","handleTodoRemove","edit","itemId","todolistContainer","Todolist","todolistToShow","setTodolistToShow","filteredTodolist","mainContainer","flexDirection","backgroundColor","mainBackgroundColor","padding","small","large","contentContainer","card","Main","setIconToLoad","setIsAddButtonLoading","isPageLoading","setIsPageLoading","setIsRemoveIconLoading","setSelectedFilter","setTodolist","getData","addData","newTodo","updateData","console","removeData","normalizedDescription","todoToUpdate","find","completedTodos","forEach","Card","CardContent","Provider","createMuiTheme","MAIN_SPACING_VALUE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.48ce4870.chunk.js","sourcesContent":["async function request({ method, body, id }) {\n  const URL = `${process.env.REACT_APP_API_ROOT}${id || ''}`;\n  const fetchOption = body\n    ? {\n        body: JSON.stringify(body) || '',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method,\n      }\n    : {\n        method,\n      };\n\n  const response = await fetch(URL, fetchOption);\n\n  return response.json();\n}\n\nconst API = {\n  removeTodo: id => request({ method: 'DELETE', id }),\n  getTodos: () => request({ method: 'GET' }),\n  addTodo: body => request({ method: 'POST', body }),\n  updateTodo: (body, id) => request({ method: 'POST', body, id }),\n};\n\nexport default API;\n","export const FILTER_BUTTON_ITEM = {\n  all: {\n    label: 'All',\n    value: 'all',\n  },\n  active: {\n    label: 'Active',\n    value: 'active',\n  },\n  completed: {\n    label: 'Completed',\n    value: 'completed',\n  },\n};\nexport const BUTTON_LABEL = {\n  add: 'Add',\n  clearCompleted: 'Clear completed',\n};\nexport const INPUT = {\n  editInputPlaceholder: 'Description can NOT be empty!',\n  mainInputPlaceholder: 'What needs to be done?',\n};\nexport const LABEL = {\n  leftItem: {\n    multi: 'items left',\n    single: 'item left',\n  },\n};\nexport const LOADER = {\n  button: {\n    size: 24,\n    thickness: 8,\n    type: 'button',\n  },\n  icon: {\n    size: 24,\n    thickness: 8,\n    type: 'icon',\n  },\n  page: {\n    size: 60,\n    thickness: 4,\n    type: 'page',\n  },\n};\nexport const TITLE = 'Todo List';\n","import { createContext } from 'react';\n\nconst StoreContext = createContext(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\n\nimport StoreContext from './context';\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  filtersContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: theme.customSpacing.base,\n  },\n  hideFilters: {\n    display: 'none',\n  },\n  leftItemContainer: {\n    display: 'flex',\n    order: 0,\n    color: theme.color.leftItemLabelColor,\n    cursor: 'default',\n    width: theme.size.leftItemWidth,\n  },\n  leftItemLabelWrapper: {\n    marginLeft: theme.customSpacing.xSmall,\n  },\n  buttonGroupContainer: {\n    display: 'flex',\n    order: 2,\n    margin: `${theme.customSpacing.base} auto 0`,\n    '@media only screen and (min-width: 499px)': {\n      order: 1,\n      margin: 0,\n    },\n  },\n  clearCompletedContainer: {\n    order: 1,\n  },\n  hideClearCompletedWrapper: {\n    visibility: 'hidden',\n  },\n}));\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  BUTTON_LABEL,\n  FILTER_BUTTON_ITEM,\n  LABEL,\n} from '../../globals/constants';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Filters.style';\n\nfunction Filters() {\n  const classes = useStyles();\n  const filterButtonItems = Object.values(FILTER_BUTTON_ITEM);\n  const {\n    handleClearAllCompleted,\n    handleFilterSelect,\n    selectedFilter,\n    todolist,\n  } = useStore();\n  const leftItemCount = todolist.filter(todo => !todo.done).length;\n  const leftItemLabel =\n    leftItemCount === 1 ? LABEL.leftItem.single : LABEL.leftItem.multi;\n  const hideClearCompleted = todolist.some(todo => todo.done);\n\n  const handleFilterClick = text => {\n    handleFilterSelect(text);\n  };\n\n  const handleClearCompleted = () => {\n    handleClearAllCompleted();\n  };\n\n  return (\n    <div\n      className={`${\n        todolist.length ? classes.filtersContainer : classes.hideFilters\n      }`}\n    >\n      <div className={classes.leftItemContainer}>\n        <div>\n          <Typography variant=\"body2\">{leftItemCount}</Typography>\n        </div>\n        <div className={classes.leftItemLabelWrapper}>\n          <Typography variant=\"body2\">{leftItemLabel}</Typography>\n        </div>\n      </div>\n      <div className={classes.buttonGroupContainer}>\n        {filterButtonItems.map(({ label, value }) => (\n          <div key={value}>\n            <Button\n              color={value === selectedFilter ? 'secondary' : 'primary'}\n              onClick={() => handleFilterClick(value)}\n              size=\"small\"\n            >\n              {label}\n            </Button>\n          </div>\n        ))}\n      </div>\n      <div\n        className={`${classes.clearCompletedContainer} ${\n          hideClearCompleted ? '' : classes.hideClearCompletedWrapper\n        }`}\n      >\n        <Button\n          color=\"secondary\"\n          onClick={handleClearCompleted}\n          size=\"small\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.clearCompleted}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  buttonProgress: {\n    left: '50%',\n    marginLeft: -12,\n    marginTop: -12,\n    position: 'absolute',\n    top: '50%',\n  },\n  fabProgress: {\n    left: 12,\n    position: 'absolute',\n    top: 12,\n    zIndex: 1,\n  },\n  pageLoaderContainer: {\n    marginTop: theme.customSpacing.larger,\n    textAlign: 'center',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { LOADER } from '../../globals/constants';\nimport { useStyles } from './Loader.style';\n\nfunction Loader({ type }) {\n  const classes = useStyles();\n\n  const loader = loaderType => {\n    switch (loaderType) {\n      case LOADER.button.type:\n        return (\n          <CircularProgress\n            className={classes.buttonProgress}\n            color=\"primary\"\n            size={LOADER.button.size}\n            thickness={LOADER.button.thickness}\n          />\n        );\n      case LOADER.icon.type:\n        return (\n          <CircularProgress\n            className={classes.fabProgress}\n            color=\"secondary\"\n            size={LOADER.icon.size}\n            thickness={LOADER.icon.thickness}\n          />\n        );\n      case LOADER.page.type:\n        return (\n          <div className={classes.pageLoaderContainer}>\n            <CircularProgress\n              size={LOADER.page.size}\n              thickness={LOADER.page.thickness}\n            />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return loader(type);\n}\n\nLoader.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Loader;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  inputContainer: {\n    display: 'flex',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& fieldset`]: {\n      'border-top-right-radius': 0,\n      'border-bottom-right-radius': 0,\n    },\n  },\n  buttonWrapper: {\n    position: 'relative',\n  },\n  button: {\n    'border-top-left-radius': 0,\n    'border-bottom-left-radius': 0,\n    height: '100%',\n  },\n});\n","import { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { BUTTON_LABEL, INPUT, LOADER } from '../../globals/constants';\nimport Loader from '../Loader';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Input.style';\n\nfunction Input() {\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n  const { handleTodoAdd, isAddButtonLoading } = useStore();\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (value) {\n      handleTodoAdd(value);\n\n      setValue('');\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className={classes.inputContainer}>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          className={classes.textField}\n          fullWidth\n          id=\"outlined-full-width\"\n          onChange={e => handleInputChange(e)}\n          onKeyDown={e => handleSubmitOnEnter(e)}\n          placeholder={INPUT.mainInputPlaceholder}\n          value={value}\n          variant=\"outlined\"\n        />\n      </div>\n      <div className={classes.buttonWrapper}>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          disabled={isAddButtonLoading}\n          onClick={handleSubmit}\n          size=\"large\"\n          variant=\"contained\"\n        >\n          {BUTTON_LABEL.add}\n        </Button>\n        {isAddButtonLoading && <Loader type={LOADER.button.type} />}\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n","const removeSpaces = text => {\n  if (typeof text === 'string' && text.length) {\n    const firstReplace = text.replace(/\\s\\s+/g, ' ');\n    const regex = /^\\s*|\\s*$/g;\n\n    return firstReplace.replace(regex, '');\n  }\n  return text;\n};\n\nexport default removeSpaces;\n","import PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title({ text }) {\n  return (\n    <div>\n      <Typography variant=\"h2\">{text}</Typography>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\nexport default Title;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todoItemEditContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative',\n  },\n  textFieldWrapper: {\n    width: '100%',\n  },\n  textField: {\n    [`& input`]: {\n      'padding-right': theme.customSpacing.editTextFieldPaddingRight,\n    },\n  },\n  submitIconWrapper: {\n    position: 'absolute',\n    right: 0,\n  },\n}));\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nimport { INPUT } from '../../../globals/constants';\nimport { useStyles } from './TodoItemEdit.style';\n\nfunction TodoItemEdit({ description, handleEdit, handleTodoEdit, id }) {\n  const classes = useStyles();\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setValue(description);\n  }, []);\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (value) {\n      const editedDescription = { description: value, id };\n\n      handleTodoEdit(editedDescription);\n\n      handleEdit(false);\n    }\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmitOnBlur = event => {\n    event.preventDefault();\n\n    handleSubmit();\n  };\n\n  return (\n    <div className={classes.todoItemEditContainer}>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          autoFocus\n          className={classes.textField}\n          error={!value}\n          fullWidth\n          id=\"outlined-full-width\"\n          onBlur={e => handleSubmitOnBlur(e)}\n          onChange={e => handleInputChange(e)}\n          onKeyDown={e => handleSubmitOnEnter(e, id)}\n          placeholder={INPUT.editInputPlaceholder}\n          value={value}\n          variant=\"outlined\"\n        />\n      </div>\n      <div className={classes.submitIconWrapper}>\n        <IconButton\n          aria-label=\"submit edit\"\n          color=\"primary\"\n          disabled={!value}\n          onClick={handleSubmit}\n        >\n          <CheckIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nTodoItemEdit.propTypes = {\n  description: PropTypes.string.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleTodoEdit: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default TodoItemEdit;\n","import Checkbox from '@material-ui/core/Checkbox';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nexport default GreenCheckbox;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todoItemViewContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    minHeight: theme.size.todoItemHeight,\n    paddingLeft: '12px',\n  },\n  checkedDescription: {\n    color: theme.color.checkedDescriptionColor,\n    textDecoration: 'line-through',\n  },\n  iconsContainer: {\n    display: 'flex',\n  },\n  removeIconWrapper: {\n    position: 'relative',\n  },\n}));\n","import PropTypes from 'prop-types';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport GreenCheckbox from '../GreenCheckbox';\nimport Loader from '../../Loader';\nimport { LOADER } from '../../../globals/constants';\nimport { useStyles } from './TodoItemView.style';\n\nfunction TodoItemView({\n  description,\n  done,\n  handleEdit,\n  handleTodoCheckedChange,\n  handleRemove,\n  iconToLoad,\n  id,\n  isRemoveIconLoading,\n}) {\n  const classes = useStyles();\n\n  const handleCheckboxChange = () => {\n    handleTodoCheckedChange(id);\n  };\n\n  const handleEditClick = () => {\n    handleEdit(true);\n  };\n\n  const handleRemoveClick = () => {\n    handleRemove(id);\n  };\n\n  return (\n    <div className={classes.todoItemViewContainer}>\n      <div>\n        <FormControlLabel\n          control={\n            <GreenCheckbox\n              checked={done}\n              name=\"checkedG\"\n              onChange={handleCheckboxChange}\n            />\n          }\n          label={\n            <Typography\n              className={`${done ? classes.checkedDescription : ''}`}\n              variant=\"body1\"\n            >\n              {description}\n            </Typography>\n          }\n        />\n      </div>\n      <div className={classes.iconsContainer}>\n        <div>\n          <IconButton\n            aria-label=\"edit an item\"\n            color=\"primary\"\n            onClick={handleEditClick}\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n        <div className={classes.removeIconWrapper}>\n          <IconButton\n            aria-label=\"delete an item\"\n            color=\"secondary\"\n            disabled={iconToLoad === id && isRemoveIconLoading}\n            onClick={handleRemoveClick}\n          >\n            <DeleteIcon />\n          </IconButton>\n          {iconToLoad === id && isRemoveIconLoading && (\n            <Loader type={LOADER.icon.type} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTodoItemView.propTypes = {\n  description: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleTodoCheckedChange: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  iconToLoad: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  isRemoveIconLoading: PropTypes.bool.isRequired,\n};\n\nexport default TodoItemView;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItemEdit from './TodoItemEdit';\nimport TodoItemView from './TodoItemView';\nimport { useStore } from '../../store/use-store';\n\nfunction TodoItem({ item }) {\n  const { description, done, id } = item;\n  const [isEdit, setIsEdit] = useState(false);\n  const {\n    handleTodoCheckedChange,\n    handleTodoEdit,\n    handleTodoRemove,\n    iconToLoad,\n    isRemoveIconLoading,\n  } = useStore();\n\n  const handleEdit = edit => {\n    setIsEdit(edit);\n  };\n\n  const handleRemove = itemId => {\n    handleTodoRemove(itemId);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <TodoItemEdit\n          description={description}\n          handleEdit={handleEdit}\n          handleTodoEdit={handleTodoEdit}\n          id={id}\n        />\n      ) : (\n        <TodoItemView\n          description={description}\n          done={done}\n          handleEdit={handleEdit}\n          handleRemove={handleRemove}\n          handleTodoCheckedChange={handleTodoCheckedChange}\n          iconToLoad={iconToLoad}\n          id={id}\n          isRemoveIconLoading={isRemoveIconLoading}\n        />\n      )}\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default TodoItem;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  todolistContainer: {\n    marginTop: theme.customSpacing.base,\n  },\n}));\n","import { useEffect, useState } from 'react';\n\nimport { FILTER_BUTTON_ITEM } from '../../globals/constants';\nimport TodoItem from '../TodoItem';\nimport { useStore } from '../../store/use-store';\nimport { useStyles } from './Todolist.style';\n\nfunction Todolist() {\n  const classes = useStyles();\n  const { selectedFilter, todolist } = useStore();\n  const [todolistToShow, setTodolistToShow] = useState([]);\n\n  useEffect(() => {\n    if (selectedFilter === FILTER_BUTTON_ITEM.active.value) {\n      const filteredTodolist = todolist.filter(todo => !todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else if (selectedFilter === FILTER_BUTTON_ITEM.completed.value) {\n      const filteredTodolist = todolist.filter(todo => todo.done);\n\n      setTodolistToShow(filteredTodolist);\n    } else {\n      setTodolistToShow(todolist);\n    }\n  }, [selectedFilter, todolist]);\n\n  return (\n    <div\n      className={`${todolistToShow.length ? classes.todolistContainer : ''}`}\n    >\n      {todolistToShow.map(item => (\n        <TodoItem item={item} key={item.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default Todolist;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: theme.color.mainBackgroundColor,\n    boxSizing: 'border-box',\n    minHeight: '100vh',\n    padding: `${theme.customSpacing.small} ${theme.customSpacing.small} ${theme.customSpacing.large}`,\n    '@media only screen and (min-width: 600px)': {\n      padding: `${theme.customSpacing.small} ${theme.customSpacing.base} ${theme.customSpacing.large}`,\n    },\n  },\n  contentContainer: {\n    marginTop: theme.customSpacing.base,\n    width: '100%',\n    '@media only screen and (min-width: 600px)': {\n      width: '90%',\n    },\n    '@media only screen and (min-width: 768px)': {\n      width: '80%',\n    },\n    '@media only screen and (min-width: 992px)': {\n      width: '70%',\n    },\n    '@media only screen and (min-width: 1200px)': {\n      width: '60%',\n    },\n  },\n  card: {\n    height: 'inherit',\n  },\n}));\n","import { useEffect, useState } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport API from '../../fetchAPI';\nimport { FILTER_BUTTON_ITEM, LOADER, TITLE } from '../../globals/constants';\nimport Filters from '../../components/Filters';\nimport Input from '../../components/Input';\nimport Loader from '../../components/Loader';\nimport removeSpaces from '../../helpers/removeSpaces';\nimport StoreContext from '../../store/context';\nimport Title from '../../components/Title';\nimport Todolist from '../../components/Todolist';\nimport { useStyles } from './Main.style';\n\nfunction Main() {\n  const classes = useStyles();\n  const [iconToLoad, setIconToLoad] = useState('');\n  const [isAddButtonLoading, setIsAddButtonLoading] = useState(false);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [isRemoveIconLoading, setIsRemoveIconLoading] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(\n    FILTER_BUTTON_ITEM.all.value\n  );\n  const [todolist, setTodolist] = useState([]);\n\n  const getData = async () => {\n    try {\n      const response = await API.getTodos();\n\n      setTodolist(response);\n    } catch (e) {\n      setIsPageLoading(false);\n    } finally {\n      setIsPageLoading(false);\n    }\n  };\n\n  const addData = async newTodo => {\n    try {\n      setIsAddButtonLoading(true);\n\n      const response = await API.addTodo(newTodo);\n\n      setTodolist([...todolist, response]);\n    } catch (e) {\n      setIsAddButtonLoading(false);\n    } finally {\n      setIsAddButtonLoading(false);\n    }\n  };\n\n  const updateData = async todo => {\n    const { id } = todo;\n\n    try {\n      await API.updateTodo(todo, id);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const removeData = async id => {\n    try {\n      await API.removeTodo(id);\n    } catch (e) {\n      setIsRemoveIconLoading(false);\n    } finally {\n      setIsRemoveIconLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsPageLoading(true);\n\n    getData();\n  }, []);\n\n  const handleTodoAdd = async description => {\n    const normalizedDescription = removeSpaces(description);\n\n    const newTodo = {\n      description: normalizedDescription,\n      done: false,\n    };\n\n    await addData(newTodo);\n  };\n\n  const handleTodoCheckedChange = async id => {\n    const todoToUpdate = todolist.find(todo => todo.id === id);\n    todoToUpdate.done = !todoToUpdate.done;\n\n    await updateData(todoToUpdate);\n\n    await getData();\n  };\n\n  const handleTodoEdit = async ({ description, id }) => {\n    const normalizedDescription = removeSpaces(description);\n    const todoToUpdate = todolist.find(todo => todo.id === id);\n\n    todoToUpdate.description = normalizedDescription;\n\n    await updateData(todoToUpdate);\n  };\n\n  const handleTodoRemove = async id => {\n    setIconToLoad(id);\n\n    setIsRemoveIconLoading(true);\n\n    await removeData(id);\n\n    const filteredTodolist = todolist.filter(todo => todo.id !== id);\n\n    setTodolist(filteredTodolist);\n  };\n\n  const handleFilterSelect = text => {\n    setSelectedFilter(text);\n  };\n\n  const handleClearAllCompleted = async () => {\n    const completedTodos = todolist.filter(todo => todo.done);\n    const filteredTodolist = todolist.filter(todo => !todo.done);\n\n    await completedTodos.forEach(({ id }) => removeData(id));\n\n    setTodolist(filteredTodolist);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <div>\n        <Title text={TITLE} />\n      </div>\n      <div className={classes.contentContainer}>\n        <Card className={classes.card}>\n          <CardContent>\n            <StoreContext.Provider\n              value={{\n                handleClearAllCompleted,\n                handleFilterSelect,\n                handleTodoAdd,\n                handleTodoCheckedChange,\n                handleTodoEdit,\n                handleTodoRemove,\n                iconToLoad,\n                isAddButtonLoading,\n                isRemoveIconLoading,\n                selectedFilter,\n                todolist,\n              }}\n            >\n              <Input />\n              {isPageLoading ? (\n                <Loader type={LOADER.page.type} />\n              ) : (\n                <div>\n                  <Todolist />\n                  <Filters />\n                </div>\n              )}\n            </StoreContext.Provider>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst EDIT_PADDING_VALUE = 62;\nconst LEFT_ITEM_WIDTH = 90;\nconst MAIN_SPACING_VALUE = 16;\nconst TODO_ITEM_HEIGHT = 56;\n\nconst checkedDescriptionColor = '#b2b2b2';\nconst leftItemLabelColor = '#8c8c8c';\nconst mainBackgroundColor = '#F5F7F9';\n\nexport const theme = createMuiTheme({\n  color: {\n    checkedDescriptionColor,\n    leftItemLabelColor,\n    mainBackgroundColor,\n  },\n  customSpacing: {\n    xSmall: `${MAIN_SPACING_VALUE / 4}px`,\n    small: `${MAIN_SPACING_VALUE / 2}px`,\n    base: `${MAIN_SPACING_VALUE}px`,\n    larger: `${MAIN_SPACING_VALUE * 1.5}px`,\n    large: `${MAIN_SPACING_VALUE * 2}px`,\n    editTextFieldPaddingRight: `${EDIT_PADDING_VALUE}px`,\n  },\n  size: {\n    leftItemWidth: `${LEFT_ITEM_WIDTH}px`,\n    todoItemHeight: `${TODO_ITEM_HEIGHT}px`,\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Main from './pages/Main';\nimport { theme } from './theme/theme';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}